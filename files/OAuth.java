/**
 * Clever-Cloud API
 * Public API for managing Clever-Cloud data and products
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.auth;

import io.swagger.client.Pair;
import org.glassfish.jersey.client.oauth1.AccessToken;

import java.util.Map;
import java.util.List;


public class OAuth implements Authentication {
  private String token;
  private String tokenSecret;
  private AccessToken accessToken;

  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public String getTokenSecret() {
    return tokenSecret;
  }

  public void setTokenSecret(String tokenSecret) {
    this.tokenSecret = tokenSecret;
  }

  public AccessToken getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(AccessToken accessToken) {
    this.accessToken = accessToken;
    this.setToken(accessToken.getToken());
    this.setTokenSecret(accessToken.getAccessTokenSecret());
  }

  @Override
  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams) {
        /*if (token != null) {
            headerParams.put("Authorization", "Bearer " + token);
        }*/
  }

  /*private String accessToken;

  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  @Override
  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams) {
    if (accessToken != null) {
      headerParams.put("Authorization", "Bearer " + accessToken);
    }
  }*/
}
